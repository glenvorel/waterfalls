name: Lint and test

on:
  push:
    paths-ignore: 
      - '**.md'
      - 'assets/**'
  pull_request:

jobs:
  lint:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Load pip from cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Load Poetry and venv from cache
        uses: actions/cache@v2
        id: load-cache
        with:
          path: |
            ~/.local
            .venv
          key: poetry-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        if: steps.load-cache.outputs.cache-hit != 'true'
        with:
          virtualenvs-in-project: true

      - name: Install dependencies
        if: steps.load-cache.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Activate venv
        run: source .venv/bin/activate

      - name: Isort
        run: poetry run isort .

      - name: Black
        run: poetry run black .

      - name: Mypy
        run: poetry run mypy .

  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.8', '3.9', '3.10' ]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load pip from cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Load Poetry and venv from cache
        uses: actions/cache@v2
        id: load-cache
        with:
          path: |
            ~/.local
            .venv
          key: poetry-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        if: steps.load-cache.outputs.cache-hit != 'true'
        with:
          virtualenvs-in-project: true

      - name: Install dependencies
        if: steps.load-cache.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Activate venv
        run: source .venv/bin/activate

      - name: Run unittest
        run: poetry run python -m unittest discover -s tests